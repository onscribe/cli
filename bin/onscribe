#!/usr/local/bin/node

/**
 * Module dependencies.
 */

var program = require('commander'),
	main = require('../lib/main'),
	path = require('path'),
	fs = require('fs');

var exec;
// package info
var package = JSON.parse( fs.readFileSync( path.resolve('../package.json'), 'utf-8') ); // condition the existance of package.json or component.json...

program
	.version( package.version )
	.option('-c, --config <path>', 'Set config path. Defaults to ~/.onscribe')

/* Setup */
program
	.command('setup')
	.description('Setup credentials')
	.action(function(options){
		process.nextTick(function(){
			exec.setup(options );
		});
	})

/* User */
program
	.command('user [id]')
	.description('Read user info')
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.user( id, options );
		});
	})

/* Product */
program
	.command('product [id]')
	.description('Read product details')
	.option("-a, --all", "List all products for user")
	.option("-i, --item <number>", "Output a single item by its id")
	.option("-k, --keys <list>", "Return only certain fields")
	.option("-n, --number <number>", "Limit number of items returned")
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.product( id, options );
		});
	})
	.on('--help', function() {
		console.log('  Examples:');
		console.log();
		console.log('    $ onscribe product {{id}}');
		console.log('    $ onscribe product --all');
		console.log();
});

/* Provider */
program
	.command('provider [id]')
	.description('Read provider info, optionally from product')
	.option("-a, --all", "Read all subscribers")
	.option("-i, --item <number>", "Output a single item by its id")
	.option("-k, --keys <list>", "Return only certain fields")
	.option("-n, --number <number>", "Limit number of items returned")
	.option("-q, --query <string>", "Output items based on conditions")
	.option("-o, --order <field>", "Define the order of output based on a field")
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.provider( id, options );
		});
	})
	.on('--help', function() {
		console.log('  Examples:');
		console.log();
		console.log('    $ onscribe user -i {{id}}');
		console.log('    $ onscribe user {{user}} --all');
		console.log();
});

/* Subscriptions */
program
	.command('subscription [id]')
	.description('Read subscriber info, optionally from product')
	.option("-a, --all", "Read all subscribers")
	.option("-i, --item <number>", "Output a single item by its id")
	.option("-k, --keys <list>", "Return only certain fields")
	.option("-n, --number <number>", "Limit number of items returned")
	.option("-q, --query <string>", "Output items based on conditions")
	.option("-o, --order <field>", "Define the order of output based on a field")
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.subscription( id, options );
		});
	})
	.on('--help', function() {
		console.log('  Examples:');
		console.log();
		console.log('    $ onscribe subscription -i {{id}}');
		console.log('    $ onscribe subscription {{user}} --all');
		console.log();
});

program.parse(process.argv);

exec = main( program );
